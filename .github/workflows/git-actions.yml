# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ] # 트리거 설정

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'corretto'
    - name: make application yml
      run: |
        cd ./src/main/resources
        touch ./application-main.yml
        echo "${{ secrets.APPLICATION_YML }}" > ./application-main.yml
      shell: bash
        
    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Docker build
      run: docker build -t strawberryfarm/main:latest .
      
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker hub publish
      run: docker push strawberryfarm/main:latest

    - name: Get Github Actions IP
      id: ip
      uses: haythem/public-ip@v1.2
        
    - name: Configure AWS Credentials # AWS 자격 증명 구성
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2

    - name: Add Github Actions IP to Security group # AWS 접근을 위한 IP Git Actions의 IP를 보안 그룹에 할당
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
    
    - name: Deploy
      uses: appleboy/ssh-action@v0.1.3
      with:
        host:  ${{ secrets.HOST }} # EC2 인스턴스 퍼블릭 DNS
        username:  ${{ secrets.USER }}
        key: ${{ secrets.PRIVATE_PEM_KEY }} 
        script: | 
          docker stop $(docker ps -a -q)
          docker rmi strawberryfarm/main:latest
          docker pull strawberryfarm/main:latest
          docker-compose up -d
    - name: Remove Github Actions IP From Security Group # AWS 접근을 위한 IP Git Actions의 IP를 보안 그룹에서 할당 해제
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
